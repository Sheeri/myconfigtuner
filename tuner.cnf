# label ||| comparison (Python) ||| expression (Python) ||| output (recommendation)

# Category: Basic checks
# make sure we have enough information
Uptime in seconds|||<86400|||Uptime|||Uptime is less than 1 day, performance tuning may not be accurate
Uptime|||== ''|||pretty_uptime(Uptime)|||Server not running?!?
Questions|||< 1000|||Questions|||Run for a longer amount of time, fewer than 1,000 questions have been run against this server.  Variables may not be accurate.
% slow queries|||>5|||Slow_queries/Questions * 100|||Too many slow queries, either increase long_query_time or optimize the queries so they are no longer slow.
slow query rate|||=~ /second|minute/|||hr_bytime((Slow_queries/Questions * 100)/Uptime_since_flush_status)|||Too many slow queries, either increase long_query_time or optimize the queries so they are no longer slow.
Long query time|||>=10|||long_query_time|||long_query_time is set to 10 seconds or more.  This may not be appropriate for your environment.
Slow query logging|||== 'OFF'|||log_slow_queries|||Enable the slow query log to troubleshoot bad queries.
% reads|||<0|||Com_select/(Com_select+Com_insert+Com_update+Com_replace+Com_delete)*100|||There is a problem with one of the following status variables:\nCom_select,Com_insert,Com_update,Com_replace,Com_delete
% writes|||<0|||(Com_insert+Com_update+Com_replace+Com_delete)/(Com_select+Com_insert+Com_update+Com_replace+Com_delete)*100|||There is a problem with one of the following status variables:\nCom_select,Com_insert,Com_update,Com_replace,Com_delete
reads|||== ''|||hr_bytime(Com_select/Uptime_since_flush_status)|||There is a problem with one of the following status variables:\nCom_select
writes|||== ''|||hr_bytime((Com_insert+Com_update+Com_replace+Com_delete)/Uptime_since_flush_status)|||There is a problem with one of the following status variables:\nCom_insert, Com_update, Com_replace, Com_delete
Queries|||== ''|||hr_bytime(Questions/Uptime_since_flush_status)|||There is a problem with the Questions or Uptime value!
Connections|||== ''|||hr_num(Connections/Uptime_since_flush_status)|||There is a problem with the Connections value!
Bytes sent/sec|||== ''|||hr_bytes(Bytes_sent/Uptime_since_flush_status)|||There is a problem with the Bytes_sent value!
Bytes received/sec|||== ''|||hr_bytes(Bytes_received/Uptime_since_flush_status)|||There is a problem with the Bytes_received value!

# Category: Version and architecture
Release cutoff (>= 2024-02-01) ||| not (  (int(v.split('.',1)[0]) > 11) or  (int(v.split('.',1)[0]) == 11 and int(v.split('.')[1]) >= 5) or  (int(v.split('.',1)[0]) == 10 and int(v.split('.')[1]) == 11 and int(v.split('.')[2]) >= 8) or (int(v.split('.',1)[0]) == 10 and int(v.split('.')[1]) == 6 and int(v.split('.')[2]) >= 17) ) ||| version.split("-", 1)[0] ||| Version predates cutoff; upgrade.
Distribution|||=~ /source/i|||version_comment|||Version is compiled from source, not a MySQL official binary.  If you did not compile from source, you may be using a package modified by a distribution.  The MySQL manual only is accurate for official MySQL binaries, not any package distributions (such as RedHat, Debian/Ubuntu etc).
Distribution|||=~ /percona/i|||version_comment|||The MySQL manual only is accurate for official MySQL binaries, Percona documentation is at http://www.percona.com/docs/wiki/


MySQL Architecture|||!~ /64/|||version_compile_machine|||MySQL is not compiled as a 64-bit package.

# Category: Binlog
sync_binlog durability|||<1|||sync_binlog|||Set to 1 for full binlog durability; lower values risk data loss on crash.
binlog cache disk use|||=~ /second|minute/|||hr_bytime(Binlog_cache_disk_use/Uptime_since_flush_status)|||Increase binlog_cache_size to keep trx in memory.
binlog stmt cache disk use/sec|||=~ /second|minute/|||hr_bytime(Binlog_stmt_cache_disk_use/Uptime_since_flush_status)|||Increase binlog_stmt_cache_size for large statement-based transactions.


# Category: Sorts
Total sorts|||<0|||Sort_scan+Sort_range|||Something is wrong with the Sort_scan and/or Sort_range values
% sorts that cause temporary tables|||>10|||Sort_merge_passes/(Sort_scan+Sort_range)*100|||Too many sorts are causing temporary tables.  Consider increasing\nsort_buffer_size and/or read_rnd_buffer_size
rate of sorts that cause temporary tables|||=~ /second|minute/|||hr_bytime(Sort_merge_passes/Uptime_since_flush_status)|||Too many sorts are causing temporary tables.  Consider increasing\nsort_buffer_size and/or read_rnd_buffer_size, or updating indexes.
sort_buffer_size|||== "0 bytes"|||hr_bytes(sort_buffer_size)|||There is something wrong with the value of sort_buffer_size
read_rnd_buffer_size|||== "0 bytes"|||hr_bytes(read_rnd_buffer_size)|||There is something wrong with the value of read_rnd_buffer_size
Sort rows|||=~ /second|minute/|||hr_bytime(Sort_rows/Uptime_since_flush_status)|||There are lots of rows being sorted.  Consider using indexes in more queries to avoid sorting too often.

# Category: Joins, scans
rate of joins without indexes|||=~ /second|minute/|||hr_bytime((Select_range_check + Select_scan + Select_full_join)/Uptime_since_flush_status)|||There are too many joins without indexes -- this means that joins are doing full table scans.
rate of reading first index entry|||=~ /second|minute/|||hr_bytime(Handler_read_first/Uptime_since_flush_status)|||The rate of reading the first index entry is high; this usually indicates frequent full index scans.
rate of reading fixed position|||=~ /second|minute/|||hr_bytime(Handler_read_rnd/Uptime_since_flush_status)|||The rate of reading data from a fixed position is high; this indicates many queries need to sort results and/or do a full table scan, including join queries that do not use indexes.
rate of reading next table row|||=~ /second|minute/|||hr_bytime(Handler_read_rnd_next/Uptime_since_flush_status)|||The rate of reading the next table row is high; this indicates many queries are doing full table scans.
full joins per 1k selects|||>1|||1000*Select_full_join/Com_select|||Missing join indexes; add appropriate indexes or rewrite joins.
range-check joins per 1k selects|||>1|||1000*Select_range_check/Com_select|||Missing join condition indexes; add indexes or rewrite joins.
read_rnd_next per select|||>1000|||Handler_read_rnd_next/Com_select|||High table scans; add indexes and avoid SELECT * on large tables.


# Category: temp tables
tmp_table_size-max_heap_table_size|||!=0|||tmp_table_size-max_heap_table_size|||tmp_table_size and max_heap_table_size are not the same.
tmp_table_size|||== "0 bytes"|||hr_bytes(tmp_table_size)|||There is something wrong with the value of tmp_table_size
max_heap_table_size|||== "0 bytes"|||hr_bytes(max_heap_table_size)|||There is something wrong with the value of max_heap_table_size
% temp disk tables|||>25|||Created_tmp_disk_tables / (Created_tmp_tables + Created_tmp_disk_tables) * 100|||Too many temporary tables are being written to disk.  Increase max_heap_table_size and tmp_table_size.
temp disk rate|||=~ /second|minute/|||hr_bytime(Created_tmp_disk_tables/Uptime_since_flush_status)|||Too many temporary tables are being written to disk.  Increase max_heap_table_size and tmp_table_size.
temp table rate|||=~ /second|minute/|||hr_bytime(Created_tmp_tables/Uptime_since_flush_status)|||Too many intermediate temporary tables are being created; consider increasing sort_buffer_size (sorting), read_rnd_buffer_size (random read buffer, ie, post-sort), read_buffer_size (sequential scan).
tmp_table_size (MB)|||<16|||tmp_table_size/1024/1024|||Increase for complex GROUP BY/ORDER BY to keep temp tables in memory.
max_heap_table_size (MB)|||<16|||max_heap_table_size/1024/1024|||Increase to match tmp_table_size and allow larger memory temp tables.
max_allowed_packet (MB)|||<16|||max_allowed_packet/1024/1024|||Increase if you have large BLOB/TEXT or see “Packet too large” errors.
tmp files|||=~ /second|minute/|||hr_bytime(Created_tmp_files/Uptime_since_flush_status)|||Frequent on-disk temps; increase in-memory limits and ensure fast tmpdir storage.
tmp tables to disk %|||>5|||100*Created_tmp_disk_tables/Created_tmp_tables|||Frequent on-disk temporary tables; increase in-memory limits and ensure fast tmpdir storage.
per-thread buffers (MB)|||>64|||(read_buffer_size+read_rnd_buffer_size+sort_buffer_size+join_buffer_size)/1024/1024|||Per-connection memory is large; reduce per-thread buffers to avoid OOM under concurrency.
join_buffer_size (MB)|||>256|||join_buffer_size/1024/1024|||Too large join buffer can cause memory bloat; prefer indexing over large buffers.
sort_buffer_size (MB)|||>128|||sort_buffer_size/1024/1024|||Too large sort buffer can cause memory bloat; prefer indexing and smarter queries.
read_buffer_size (MB)|||>64|||read_buffer_size/1024/1024|||Large sequential read buffer can waste memory under high concurrency.
read_rnd_buffer_size (MB)|||>64|||read_rnd_buffer_size/1024/1024|||Large random read buffer can waste memory under high concurrency.

# Category: other caches
table open cache size (5.1+)|||>-1|||table_open_cache|||Size of the table cache
rate of table open|||=~ /second|minute/|||hr_bytime(Opened_tables/Uptime_since_flush_status)|||The rate of opening tables is high, increase table_open_cache to avoid this.
% open files|||>85|||Open_files / open_files_limit * 100|||The number of open files is approaching the max number of open files.  You may get a "Too many open files" error.\nConsider increasing open_files_limit, and check the error log when restarting after changing open_files_limit.
rate of open files|||=~ /second|minute/|||hr_bytime(Open_files /Uptime_since_flush_status)|||The rate of opening files is high.\nConsider increasing open_files_limit, and check the error log when restarting after changing open_files_limit.
open files headroom %|||<100|||100*open_files_limit/(2*table_open_cache)|||Raise open_files_limit to at least 2x table_open_cache to prevent open cache churn.
rate of opened table defs|||=~ /second|minute/|||hr_bytime(Opened_table_definitions/Uptime_since_flush_status)|||Increase table_definition_cache to reduce .frm opens.
Immediate table locks %|||<95|||Table_locks_immediate / (Table_locks_waited + Table_locks_immediate) * 100|||Too many table locks were not granted immediately. Optimize queries and/or use InnoDB to reduce lock wait.
Table lock wait rate|||=~ /second|minute/|||hr_bytime(Table_locks_waited/Uptime_since_flush_status)|||Too many table locks were not granted immediately. Optimize queries and/or use InnoDB to reduce lock wait.
thread cache|||<1|||thread_cache_size|||Enable the thread cache by setting thread_cache_size>0 for less overhead from new connections to MySQL.
Total threads created|||<1|||Threads_created|||There is something wrong with the value of Threads_created.
% thread cache misses|||>10|||Threads_created/Connections*100|||Increase thread_cache_size to reduce thread creation overhead.
% thread cache utilization|||<40|||100*Threads_cached/thread_cache_size|||Increase thread_cache_size; low cache utilization implies frequent thread creation.
Threads that are slow to launch|||>0|||Slow_launch_threads|||There are too many threads that are slow to launch
Slow launch time|||<0|||slow_launch_time|||There is something wrong with the slow_launch_time variable

# Category: Connections
% connections used|||>80|||Max_used_connections/max_connections * 100|||The high water mark for connections used is getting close to the value of max_connections.  Increase max_connections, \n reduce pooling/queueing, or decrease wait_timeout so that connections that do not close database handlers properly get killed sooner.\nMake sure the code closes database handlers properly.
Max connections used|||<1|||Max_used_connections|||There is something wrong with the value of Max_used_connections.
Max connections limit|||<1|||max_connections|||There is something wrong with the value of max_connections.
% aborted connections|||>5|||Aborted_connects/Connections * 100|||Too many connections are aborted, meaning they cannot be authorized.
rate of aborted connections|||=~ /second|minute/|||hr_bytime(Aborted_connects/Uptime_since_flush_status)|||Too many connections are aborted, meaning they cannot be authorized.
% aborted clients|||>5|||Aborted_clients/Connections*100|||Too many clients are aborted, meaning they did not close their connection to MySQL properly.  This can be due to network issues or code not closing a database handler properly.
rate of aborted clients|||=~ /second|minute/|||hr_bytime(Aborted_clients/Uptime_since_flush_status)|||Too many clients are aborted, meaning they did not close their connection to MySQL properly.  This can be due to network issues or code not closing a database handler properly. Review wait_timeout, application timeouts, and query execution times.

# Category: InnoDB
Is InnoDB enabled?|||!= "YES"|||have_innodb|||You do not have InnoDB enabled
% innoDB log size|||>=0|||innodb_log_file_size / innodb_buffer_pool_size * 100|||InnoDB log file size is not an appropriate size, in relation to the InnoDB buffer pool.  Consider changing either\ninnodb_log_file_size or innodb_buffer_pool_size
InnoDB buffer pool hit %|||<99|||100*(1 - Innodb_buffer_pool_reads/Innodb_buffer_pool_read_requests)|||Increase innodb_buffer_pool_size and improve indexing to reduce disk reads.
InnoDB buffer pool free %|||<5|||100*Innodb_buffer_pool_pages_free/Innodb_buffer_pool_pages_total|||Buffer pool is very full; if IO is high, consider increasing innodb_buffer_pool_size.
InnoDB dirty pages %|||>5|||100*Innodb_buffer_pool_pages_dirty/Innodb_buffer_pool_pages_total|||Checkpoint pressure; tune innodb_io_capacity, innodb_max_dirty_pages_pct, and flush settings.
InnoDB log waits|||=~ /second|minute/|||hr_bytime(Innodb_log_waits/Uptime_since_flush_status)|||Increase innodb_log_buffer_size; large transactions or bursts are stalling on redo flush.
avg InnoDB row lock time (ms)|||>10|||Innodb_row_lock_time_avg|||Reduce contention via better indexing, shorter transactions, or lower isolation if acceptable.
InnoDB row lock waits|||=~ /second|minute/|||hr_bytime(Innodb_row_lock_waits/Uptime_since_flush_status)|||Reduce hot-row contention; consider batching, splitting hotspots, or secondary indexes.
innodb_flush_neighbors (SSD)|||>0|||innodb_flush_neighbors|||Set to 0 for SSDs to reduce neighbor page flush latency.
innodb_flush_log_at_trx_commit|||!=2|||innodb_flush_log_at_trx_commit|||Set to 1 for full ACID; 2 improves performance with small durability risk; 0 for bulk loads only.
innodb_log_file_size (MB)|||<512|||innodb_log_file_size/1024/1024|||Increase to reduce checkpoint pressure for write-heavy workloads.
innodb_log_buffer_size (MB)|||<16|||innodb_log_buffer_size/1024/1024|||Increase to avoid log waits during large transactions.

# Category: other
#MyISAM concurrent inserts|||== 0|||concurrent_insert|||Enable concurrent_insert by setting it to 1
## MyISAM index cache
#MyISAM key buffer size|||== "0 bytes"|||hr_bytes(key_buffer_size)|||Key buffer is not initialized.  No MyISAM indexes will be cached.
#max % MyISAM key buffer ever used|||<95|||(Key_blocks_used)*key_cache_block_size/key_buffer_size * 100|||MyISAM key buffer (index cache) % used is low.  You may need to decrease the size of key_buffer_size, re-examine your tables to see if indexes have been removed, or examine queries and expectations about what indexes are being used.
#% MyISAM key buffer used|||<95|||(1-Key_blocks_unused*key_cache_block_size/key_buffer_size) * 100|||MyISAM key buffer (index cache) % used is low.  You may need to decrease the size of key_buffer_size, re-examine your tables to see if indexes have been removed, or examine queries and expectations about what indexes are being used.
#% index reads from memory|||<95|||100 - (Key_reads / Key_read_requests * 100)|||The % of indexes that use the MyISAM key buffer is low.  You may need to increase key_buffer_size.
#MyISAM key read miss %|||>0.1|||100*Key_reads/Key_read_requests|||Increase key_buffer_size (if MyISAM in use) or migrate to InnoDB.
#MyISAM key write miss %|||>10|||100*Key_writes/Key_write_requests|||Increase key_buffer_size (if MyISAM in use) or migrate to InnoDB.
#
## Category: Query cache
#Query cache size|||ne "0 bytes"|||hr_bytes(query_cache_size)|||The query_cache is turned on. probably you want this turned off.
##Query cache efficiency (%)|||<20|||Qcache_hits/(Com_select+Qcache_hits)*100|||query cache not efficient, consider increasing query_cache_limit.
##% query cache used|||<80|||Qcache_free_memory / query_cache_size * 100|||The query cache is not being fully utilized.
##Query cache low memory prunes|||=~ /second|minute/|||hr_bytime(Qcache_lowmem_prunes/Uptime_since_flush_status)|||Increase query_cache_size -- there are too many low memory prunes.
##Query cache min result size|||== "1.0 Mb"|||hr_bytes(query_cache_limit)|||The max size of the result set in the query cache is the default of 1 Mb.  Changing this (usually by increasing) may increase efficiency.
#
# Category: Aria
Aria pagecache miss %|||>5|||100*Aria_pagecache_reads/Aria_pagecache_read_requests|||Increase aria_pagecache_buffer_size or reduce Aria usage.

# Category: Timeouts
interactive_timeout too high (s)|||>28800|||interactive_timeout|||Very high timeout wastes resources; lower unless required.
wait_timeout too low (s)|||<30|||wait_timeout|||Low timeout may cause frequent disconnects; increase for long-lived app connections or use pooling.
wait_timeout too high (s)|||>28800|||wait_timeout|||Very high timeout wastes resources; lower unless required.


